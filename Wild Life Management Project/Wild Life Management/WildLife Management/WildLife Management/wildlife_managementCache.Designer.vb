'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.235
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Public Class wildlife_managementCacheClientSyncProvider
    Inherits Microsoft.Synchronization.Data.SqlServerCe.SqlCeClientSyncProvider
    
    Public Sub New()
        MyBase.New
        Me.ConnectionString = Global.WildLife_Management.My.MySettings.Default.Clientwildlife_managementConnectionString
    End Sub
    
    Public Sub New(ByVal connectionString As String)
        MyBase.New
        Me.ConnectionString = connectionString
    End Sub
End Class

Partial Public Class wildlife_managementCacheSyncAgent
    Inherits Microsoft.Synchronization.SyncAgent
    
    Private _animalSyncTable As animalSyncTable
    
    Private _habitatSyncTable As habitatSyncTable
    
    Private _lives_inSyncTable As lives_inSyncTable
    
    Private _log_inSyncTable As log_inSyncTable
    
    Private _memberSyncTable As memberSyncTable
    
    Private _photoSyncTable As photoSyncTable
    
    Private _sightingSyncTable As sightingSyncTable
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeSyncProviders
        Me.InitializeSyncTables
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property animal() As animalSyncTable
        Get
            Return Me._animalSyncTable
        End Get
        Set
            Me.Configuration.SyncTables.Remove(Me._animalSyncTable)
            Me._animalSyncTable = value
            Me.Configuration.SyncTables.Add(Me._animalSyncTable)
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property habitat() As habitatSyncTable
        Get
            Return Me._habitatSyncTable
        End Get
        Set
            Me.Configuration.SyncTables.Remove(Me._habitatSyncTable)
            Me._habitatSyncTable = value
            Me.Configuration.SyncTables.Add(Me._habitatSyncTable)
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property lives_in() As lives_inSyncTable
        Get
            Return Me._lives_inSyncTable
        End Get
        Set
            Me.Configuration.SyncTables.Remove(Me._lives_inSyncTable)
            Me._lives_inSyncTable = value
            Me.Configuration.SyncTables.Add(Me._lives_inSyncTable)
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property log_in() As log_inSyncTable
        Get
            Return Me._log_inSyncTable
        End Get
        Set
            Me.Configuration.SyncTables.Remove(Me._log_inSyncTable)
            Me._log_inSyncTable = value
            Me.Configuration.SyncTables.Add(Me._log_inSyncTable)
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property member() As memberSyncTable
        Get
            Return Me._memberSyncTable
        End Get
        Set
            Me.Configuration.SyncTables.Remove(Me._memberSyncTable)
            Me._memberSyncTable = value
            Me.Configuration.SyncTables.Add(Me._memberSyncTable)
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property photo() As photoSyncTable
        Get
            Return Me._photoSyncTable
        End Get
        Set
            Me.Configuration.SyncTables.Remove(Me._photoSyncTable)
            Me._photoSyncTable = value
            Me.Configuration.SyncTables.Add(Me._photoSyncTable)
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property sighting() As sightingSyncTable
        Get
            Return Me._sightingSyncTable
        End Get
        Set
            Me.Configuration.SyncTables.Remove(Me._sightingSyncTable)
            Me._sightingSyncTable = value
            Me.Configuration.SyncTables.Add(Me._sightingSyncTable)
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeSyncProviders()
        'Create SyncProviders.
        Me.RemoteProvider = New wildlife_managementCacheServerSyncProvider()
        Me.LocalProvider = New wildlife_managementCacheClientSyncProvider()
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeSyncTables()
        'Create SyncTables.
        Me._animalSyncTable = New animalSyncTable()
        Me._animalSyncTable.SyncGroup = New Microsoft.Synchronization.Data.SyncGroup("animalSyncTableSyncGroup")
        Me.Configuration.SyncTables.Add(Me._animalSyncTable)
        Me._habitatSyncTable = New habitatSyncTable()
        Me._habitatSyncTable.SyncGroup = New Microsoft.Synchronization.Data.SyncGroup("habitatSyncTableSyncGroup")
        Me.Configuration.SyncTables.Add(Me._habitatSyncTable)
        Me._lives_inSyncTable = New lives_inSyncTable()
        Me._lives_inSyncTable.SyncGroup = New Microsoft.Synchronization.Data.SyncGroup("lives_inSyncTableSyncGroup")
        Me.Configuration.SyncTables.Add(Me._lives_inSyncTable)
        Me._log_inSyncTable = New log_inSyncTable()
        Me._log_inSyncTable.SyncGroup = New Microsoft.Synchronization.Data.SyncGroup("log_inSyncTableSyncGroup")
        Me.Configuration.SyncTables.Add(Me._log_inSyncTable)
        Me._memberSyncTable = New memberSyncTable()
        Me._memberSyncTable.SyncGroup = New Microsoft.Synchronization.Data.SyncGroup("memberSyncTableSyncGroup")
        Me.Configuration.SyncTables.Add(Me._memberSyncTable)
        Me._photoSyncTable = New photoSyncTable()
        Me._photoSyncTable.SyncGroup = New Microsoft.Synchronization.Data.SyncGroup("photoSyncTableSyncGroup")
        Me.Configuration.SyncTables.Add(Me._photoSyncTable)
        Me._sightingSyncTable = New sightingSyncTable()
        Me._sightingSyncTable.SyncGroup = New Microsoft.Synchronization.Data.SyncGroup("sightingSyncTableSyncGroup")
        Me.Configuration.SyncTables.Add(Me._sightingSyncTable)
    End Sub
    
    Partial Public Class animalSyncTable
        Inherits Microsoft.Synchronization.Data.SyncTable
        
        Partial Private Sub OnInitialized()
        End Sub
        
        Public Sub New()
            MyBase.New
            Me.InitializeTableOptions
            Me.OnInitialized
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitializeTableOptions()
            Me.TableName = "animal"
            Me.CreationOption = Microsoft.Synchronization.Data.TableCreationOption.DropExistingOrCreateNewTable
        End Sub
    End Class
    
    Partial Public Class habitatSyncTable
        Inherits Microsoft.Synchronization.Data.SyncTable
        
        Partial Private Sub OnInitialized()
        End Sub
        
        Public Sub New()
            MyBase.New
            Me.InitializeTableOptions
            Me.OnInitialized
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitializeTableOptions()
            Me.TableName = "habitat"
            Me.CreationOption = Microsoft.Synchronization.Data.TableCreationOption.DropExistingOrCreateNewTable
        End Sub
    End Class
    
    Partial Public Class lives_inSyncTable
        Inherits Microsoft.Synchronization.Data.SyncTable
        
        Partial Private Sub OnInitialized()
        End Sub
        
        Public Sub New()
            MyBase.New
            Me.InitializeTableOptions
            Me.OnInitialized
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitializeTableOptions()
            Me.TableName = "lives_in"
            Me.CreationOption = Microsoft.Synchronization.Data.TableCreationOption.DropExistingOrCreateNewTable
        End Sub
    End Class
    
    Partial Public Class log_inSyncTable
        Inherits Microsoft.Synchronization.Data.SyncTable
        
        Partial Private Sub OnInitialized()
        End Sub
        
        Public Sub New()
            MyBase.New
            Me.InitializeTableOptions
            Me.OnInitialized
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitializeTableOptions()
            Me.TableName = "log_in"
            Me.CreationOption = Microsoft.Synchronization.Data.TableCreationOption.DropExistingOrCreateNewTable
        End Sub
    End Class
    
    Partial Public Class memberSyncTable
        Inherits Microsoft.Synchronization.Data.SyncTable
        
        Partial Private Sub OnInitialized()
        End Sub
        
        Public Sub New()
            MyBase.New
            Me.InitializeTableOptions
            Me.OnInitialized
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitializeTableOptions()
            Me.TableName = "member"
            Me.CreationOption = Microsoft.Synchronization.Data.TableCreationOption.DropExistingOrCreateNewTable
        End Sub
    End Class
    
    Partial Public Class photoSyncTable
        Inherits Microsoft.Synchronization.Data.SyncTable
        
        Partial Private Sub OnInitialized()
        End Sub
        
        Public Sub New()
            MyBase.New
            Me.InitializeTableOptions
            Me.OnInitialized
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitializeTableOptions()
            Me.TableName = "photo"
            Me.CreationOption = Microsoft.Synchronization.Data.TableCreationOption.DropExistingOrCreateNewTable
        End Sub
    End Class
    
    Partial Public Class sightingSyncTable
        Inherits Microsoft.Synchronization.Data.SyncTable
        
        Partial Private Sub OnInitialized()
        End Sub
        
        Public Sub New()
            MyBase.New
            Me.InitializeTableOptions
            Me.OnInitialized
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitializeTableOptions()
            Me.TableName = "sighting"
            Me.CreationOption = Microsoft.Synchronization.Data.TableCreationOption.DropExistingOrCreateNewTable
        End Sub
    End Class
End Class


Partial Public Class animalSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'animalSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand()
        Me.InsertCommand.CommandText = " SET IDENTITY_INSERT dbo.animal ON ;WITH CHANGE_TRACKING_CONTEXT (@sync_client_id"& _ 
            "_binary) INSERT INTO dbo.animal ([aid], [cname], [sname], [tcount], [status], [i"& _ 
            "nfo], [pid]) VALUES (@aid, @cname, @sname, @tcount, @status, @info, @pid) SET @s"& _ 
            "ync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo"& _ 
            ".animal')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking "& _ 
            "has cleaned up tracking information for table ''%s''. To recover from this error"& _ 
            ", the client must reinitialize its local database and try again',16,3,N'dbo.anim"& _ 
            "al')  SET IDENTITY_INSERT dbo.animal OFF "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@aid", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@cname", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sname", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@tcount", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@status", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@info", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@pid", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'animalSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand()
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.animal FROM dbo"& _ 
            ".animal JOIN CHANGETABLE(VERSION dbo.animal, ([aid]), (@aid)) CT  ON CT.[aid] = "& _ 
            "dbo.animal.[aid] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL O"& _ 
            "R CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT "& _ 
            "IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_c"& _ 
            "ount = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.animal')"& _ 
            ") > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has clean"& _ 
            "ed up tracking information for table ''%s''. To recover from this error, the cli"& _ 
            "ent must reinitialize its local database and try again',16,3,N'dbo.animal') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@aid", System.Data.SqlDbType.Int))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'animalSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand()
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.animal SET [cna"& _ 
            "me] = @cname, [sname] = @sname, [tcount] = @tcount, [status] = @status, [info] ="& _ 
            " @info, [pid] = @pid FROM dbo.animal  JOIN CHANGETABLE(VERSION dbo.animal, ([aid"& _ 
            "]), (@aid)) CT  ON CT.[aid] = dbo.animal.[aid] WHERE (@sync_force_write = 1 OR C"& _ 
            "T.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anc"& _ 
            "hor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_clie"& _ 
            "nt_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VE"& _ 
            "RSION(object_id(N'dbo.animal')) > @sync_last_received_anchor RAISERROR (N'SQL Se"& _ 
            "rver Change Tracking has cleaned up tracking information for table ''%s''. To re"& _ 
            "cover from this error, the client must reinitialize its local database and try a"& _ 
            "gain',16,3,N'dbo.animal') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@cname", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sname", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@tcount", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@status", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@info", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@pid", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@aid", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'animalSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[aid], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGETABLE(CH"& _ 
            "ANGES dbo.animal, @sync_last_received_anchor) CT WHERE (CT.[aid] = @aid AND CT.S"& _ 
            "YS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@aid", System.Data.SqlDbType.Int))
        'animalSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.animal.[aid], [cname], [sname], [tcount], [status], [info], [pid], CT."& _ 
            "SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.animal JOIN CHANGETABLE(VERSI"& _ 
            "ON dbo.animal, ([aid]), (@aid)) CT  ON CT.[aid] = dbo.animal.[aid]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@aid", System.Data.SqlDbType.Int))
        'animalSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.animal.[aid], [cname], [sname], [tcount], [st"& _ 
            "atus], [info], [pid] FROM dbo.animal LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.ani"& _ 
            "mal, @sync_last_received_anchor) CT ON CT.[aid] = dbo.animal.[aid] WHERE (CT.SYS"& _ 
            "_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary) ELSE"& _ 
            "  BEGIN SELECT dbo.animal.[aid], [cname], [sname], [tcount], [status], [info], ["& _ 
            "pid] FROM dbo.animal JOIN CHANGETABLE(CHANGES dbo.animal, @sync_last_received_an"& _ 
            "chor) CT ON CT.[aid] = dbo.animal.[aid] WHERE (CT.SYS_CHANGE_OPERATION = 'I' AND"& _ 
            " CT.SYS_CHANGE_CREATION_VERSION  <= @sync_new_received_anchor AND (CT.SYS_CHANGE"& _ 
            "_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE"& _ 
            "_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.animal')) > @sync_last_received_anch"& _ 
            "or RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information f"& _ 
            "or table ''%s''. To recover from this error, the client must reinitialize its lo"& _ 
            "cal database and try again',16,3,N'dbo.animal')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'animalSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[aid] FROM CHANGETABLE(CHANGES dbo.anim"& _ 
            "al, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION = 'D' AND CT.S"& _ 
            "YS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NUL"& _ 
            "L OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_V"& _ 
            "ALID_VERSION(object_id(N'dbo.animal')) > @sync_last_received_anchor RAISERROR (N"& _ 
            "'SQL Server Change Tracking has cleaned up tracking information for table ''%s''"& _ 
            ". To recover from this error, the client must reinitialize its local database an"& _ 
            "d try again',16,3,N'dbo.animal')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'animalSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.animal.[aid], [cname], [sname], [tcoun"& _ 
            "t], [status], [info], [pid] FROM dbo.animal JOIN CHANGETABLE(CHANGES dbo.animal,"& _ 
            " @sync_last_received_anchor) CT ON CT.[aid] = dbo.animal.[aid] WHERE (CT.SYS_CHA"& _ 
            "NGE_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND ("& _ 
            "CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary"& _ 
            ")); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.animal')) > @sync_last_"& _ 
            "received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking "& _ 
            "information for table ''%s''. To recover from this error, the client must reinit"& _ 
            "ialize its local database and try again',16,3,N'dbo.animal')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "animal"
    End Sub
End Class

Partial Public Class habitatSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'habitatSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand()
        Me.InsertCommand.CommandText = " SET IDENTITY_INSERT dbo.habitat ON ;WITH CHANGE_TRACKING_CONTEXT (@sync_client_i"& _ 
            "d_binary) INSERT INTO dbo.habitat ([hid], [hname], [info]) VALUES (@hid, @hname,"& _ 
            " @info) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(o"& _ 
            "bject_id(N'dbo.habitat')) > @sync_last_received_anchor RAISERROR (N'SQL Server C"& _ 
            "hange Tracking has cleaned up tracking information for table ''%s''. To recover "& _ 
            "from this error, the client must reinitialize its local database and try again',"& _ 
            "16,3,N'dbo.habitat')  SET IDENTITY_INSERT dbo.habitat OFF "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@hid", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@hname", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@info", System.Data.SqlDbType.VarChar))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'habitatSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand()
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.habitat FROM db"& _ 
            "o.habitat JOIN CHANGETABLE(VERSION dbo.habitat, ([hid]), (@hid)) CT  ON CT.[hid]"& _ 
            " = dbo.habitat.[hid] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NU"& _ 
            "LL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONT"& _ 
            "EXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_r"& _ 
            "ow_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.habi"& _ 
            "tat')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has "& _ 
            "cleaned up tracking information for table ''%s''. To recover from this error, th"& _ 
            "e client must reinitialize its local database and try again',16,3,N'dbo.habitat'"& _ 
            ") "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@hid", System.Data.SqlDbType.Int))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'habitatSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand()
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.habitat SET [hn"& _ 
            "ame] = @hname, [info] = @info FROM dbo.habitat  JOIN CHANGETABLE(VERSION dbo.hab"& _ 
            "itat, ([hid]), (@hid)) CT  ON CT.[hid] = dbo.habitat.[hid] WHERE (@sync_force_wr"& _ 
            "ite = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_"& _ 
            "received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT "& _ 
            "= @sync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_"& _ 
            "MIN_VALID_VERSION(object_id(N'dbo.habitat')) > @sync_last_received_anchor RAISER"& _ 
            "ROR (N'SQL Server Change Tracking has cleaned up tracking information for table "& _ 
            "''%s''. To recover from this error, the client must reinitialize its local datab"& _ 
            "ase and try again',16,3,N'dbo.habitat') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@hname", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@info", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@hid", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'habitatSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[hid], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGETABLE(CH"& _ 
            "ANGES dbo.habitat, @sync_last_received_anchor) CT WHERE (CT.[hid] = @hid AND CT."& _ 
            "SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@hid", System.Data.SqlDbType.Int))
        'habitatSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.habitat.[hid], [hname], [info], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_V"& _ 
            "ERSION FROM dbo.habitat JOIN CHANGETABLE(VERSION dbo.habitat, ([hid]), (@hid)) C"& _ 
            "T  ON CT.[hid] = dbo.habitat.[hid]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@hid", System.Data.SqlDbType.Int))
        'habitatSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.habitat.[hid], [hname], [info] FROM dbo.habit"& _ 
            "at LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.habitat, @sync_last_received_anchor) "& _ 
            "CT ON CT.[hid] = dbo.habitat.[hid] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SY"& _ 
            "S_CHANGE_CONTEXT <> @sync_client_id_binary) ELSE  BEGIN SELECT dbo.habitat.[hid]"& _ 
            ", [hname], [info] FROM dbo.habitat JOIN CHANGETABLE(CHANGES dbo.habitat, @sync_l"& _ 
            "ast_received_anchor) CT ON CT.[hid] = dbo.habitat.[hid] WHERE (CT.SYS_CHANGE_OPE"& _ 
            "RATION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= @sync_new_received_anchor AN"& _ 
            "D (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_bin"& _ 
            "ary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.habitat')) > @sync_l"& _ 
            "ast_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up track"& _ 
            "ing information for table ''%s''. To recover from this error, the client must re"& _ 
            "initialize its local database and try again',16,3,N'dbo.habitat')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'habitatSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[hid] FROM CHANGETABLE(CHANGES dbo.habi"& _ 
            "tat, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION = 'D' AND CT."& _ 
            "SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NU"& _ 
            "LL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_"& _ 
            "VALID_VERSION(object_id(N'dbo.habitat')) > @sync_last_received_anchor RAISERROR "& _ 
            "(N'SQL Server Change Tracking has cleaned up tracking information for table ''%s"& _ 
            "''. To recover from this error, the client must reinitialize its local database "& _ 
            "and try again',16,3,N'dbo.habitat')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'habitatSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.habitat.[hid], [hname], [info] FROM db"& _ 
            "o.habitat JOIN CHANGETABLE(CHANGES dbo.habitat, @sync_last_received_anchor) CT O"& _ 
            "N CT.[hid] = dbo.habitat.[hid] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS_C"& _ 
            "HANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR"& _ 
            " CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID"& _ 
            "_VERSION(object_id(N'dbo.habitat')) > @sync_last_received_anchor RAISERROR (N'SQ"& _ 
            "L Server Change Tracking has cleaned up tracking information for table ''%s''. T"& _ 
            "o recover from this error, the client must reinitialize its local database and t"& _ 
            "ry again',16,3,N'dbo.habitat')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "habitat"
    End Sub
End Class

Partial Public Class lives_inSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'lives_inSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand()
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.lives_in ("& _ 
            "[aid], [hid]) VALUES (@aid, @hid) SET @sync_row_count = @@rowcount; IF CHANGE_TR"& _ 
            "ACKING_MIN_VALID_VERSION(object_id(N'dbo.lives_in')) > @sync_last_received_ancho"& _ 
            "r RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information fo"& _ 
            "r table ''%s''. To recover from this error, the client must reinitialize its loc"& _ 
            "al database and try again',16,3,N'dbo.lives_in') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@aid", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@hid", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'lives_inSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand()
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.lives_in FROM d"& _ 
            "bo.lives_in JOIN CHANGETABLE(VERSION dbo.lives_in, ([aid], [hid]), (@aid, @hid))"& _ 
            " CT  ON CT.[aid] = dbo.lives_in.[aid] AND CT.[hid] = dbo.lives_in.[hid] WHERE (@"& _ 
            "sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <"& _ 
            "= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CH"& _ 
            "ANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHA"& _ 
            "NGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.lives_in')) > @sync_last_received"& _ 
            "_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking informat"& _ 
            "ion for table ''%s''. To recover from this error, the client must reinitialize i"& _ 
            "ts local database and try again',16,3,N'dbo.lives_in') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@aid", System.Data.SqlDbType.Int))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@hid", System.Data.SqlDbType.Int))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'lives_inSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[aid], CT.[hid], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHAN"& _ 
            "GETABLE(CHANGES dbo.lives_in, @sync_last_received_anchor) CT WHERE (CT.[aid] = @"& _ 
            "aid AND CT.[hid] = @hid AND CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@aid", System.Data.SqlDbType.Int))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@hid", System.Data.SqlDbType.Int))
        'lives_inSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.lives_in.[aid], dbo.lives_in.[hid], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHAN"& _ 
            "GE_VERSION FROM dbo.lives_in JOIN CHANGETABLE(VERSION dbo.lives_in, ([aid], [hid"& _ 
            "]), (@aid, @hid)) CT  ON CT.[aid] = dbo.lives_in.[aid] AND CT.[hid] = dbo.lives_"& _ 
            "in.[hid]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@aid", System.Data.SqlDbType.Int))
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@hid", System.Data.SqlDbType.Int))
        'lives_inSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.lives_in.[aid], dbo.lives_in.[hid] FROM dbo.l"& _ 
            "ives_in LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.lives_in, @sync_last_received_an"& _ 
            "chor) CT ON CT.[aid] = dbo.lives_in.[aid] AND CT.[hid] = dbo.lives_in.[hid] WHER"& _ 
            "E (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_bin"& _ 
            "ary) ELSE  BEGIN SELECT dbo.lives_in.[aid], dbo.lives_in.[hid] FROM dbo.lives_in"& _ 
            " JOIN CHANGETABLE(CHANGES dbo.lives_in, @sync_last_received_anchor) CT ON CT.[ai"& _ 
            "d] = dbo.lives_in.[aid] AND CT.[hid] = dbo.lives_in.[hid] WHERE (CT.SYS_CHANGE_O"& _ 
            "PERATION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= @sync_new_received_anchor "& _ 
            "AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_b"& _ 
            "inary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.lives_in')) > @syn"& _ 
            "c_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tr"& _ 
            "acking information for table ''%s''. To recover from this error, the client must"& _ 
            " reinitialize its local database and try again',16,3,N'dbo.lives_in')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'lives_inSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[aid], CT.[hid] FROM CHANGETABLE(CHANGE"& _ 
            "S dbo.lives_in, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION = "& _ 
            "'D' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CO"& _ 
            "NTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TR"& _ 
            "ACKING_MIN_VALID_VERSION(object_id(N'dbo.lives_in')) > @sync_last_received_ancho"& _ 
            "r RAISERROR (N'SQL Server Change Tracking has cleaned up tracking information fo"& _ 
            "r table ''%s''. To recover from this error, the client must reinitialize its loc"& _ 
            "al database and try again',16,3,N'dbo.lives_in')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'lives_inSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.lives_in.[aid], dbo.lives_in.[hid] FRO"& _ 
            "M dbo.lives_in JOIN CHANGETABLE(CHANGES dbo.lives_in, @sync_last_received_anchor"& _ 
            ") CT ON CT.[aid] = dbo.lives_in.[aid] AND CT.[hid] = dbo.lives_in.[hid] WHERE (C"& _ 
            "T.SYS_CHANGE_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anc"& _ 
            "hor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_"& _ 
            "id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.lives_in')) > "& _ 
            "@sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned u"& _ 
            "p tracking information for table ''%s''. To recover from this error, the client "& _ 
            "must reinitialize its local database and try again',16,3,N'dbo.lives_in')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "lives_in"
    End Sub
End Class

Partial Public Class log_inSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'log_inSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand()
        Me.InsertCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) INSERT INTO dbo.log_in ([u"& _ 
            "name], [pword], [type]) VALUES (@uname, @pword, @type) SET @sync_row_count = @@r"& _ 
            "owcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.log_in')) > @sync_"& _ 
            "last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up trac"& _ 
            "king information for table ''%s''. To recover from this error, the client must r"& _ 
            "einitialize its local database and try again',16,3,N'dbo.log_in') "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@pword", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@type", System.Data.SqlDbType.Char))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'log_inSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand()
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.log_in FROM dbo"& _ 
            ".log_in JOIN CHANGETABLE(VERSION dbo.log_in, ([uname]), (@uname)) CT  ON CT.[una"& _ 
            "me] = dbo.log_in.[uname] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION I"& _ 
            "S NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_"& _ 
            "CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sy"& _ 
            "nc_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo."& _ 
            "log_in')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking h"& _ 
            "as cleaned up tracking information for table ''%s''. To recover from this error,"& _ 
            " the client must reinitialize its local database and try again',16,3,N'dbo.log_i"& _ 
            "n') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'log_inSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand()
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.log_in SET [pwo"& _ 
            "rd] = @pword, [type] = @type FROM dbo.log_in  JOIN CHANGETABLE(VERSION dbo.log_i"& _ 
            "n, ([uname]), (@uname)) CT  ON CT.[uname] = dbo.log_in.[uname] WHERE (@sync_forc"& _ 
            "e_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_l"& _ 
            "ast_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONT"& _ 
            "EXT = @sync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACK"& _ 
            "ING_MIN_VALID_VERSION(object_id(N'dbo.log_in')) > @sync_last_received_anchor RAI"& _ 
            "SERROR (N'SQL Server Change Tracking has cleaned up tracking information for tab"& _ 
            "le ''%s''. To recover from this error, the client must reinitialize its local da"& _ 
            "tabase and try again',16,3,N'dbo.log_in') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@pword", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@type", System.Data.SqlDbType.Char))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'log_inSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[uname], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGETABLE("& _ 
            "CHANGES dbo.log_in, @sync_last_received_anchor) CT WHERE (CT.[uname] = @uname AN"& _ 
            "D CT.SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar))
        'log_inSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.log_in.[uname], [pword], [type], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_"& _ 
            "VERSION FROM dbo.log_in JOIN CHANGETABLE(VERSION dbo.log_in, ([uname]), (@uname)"& _ 
            ") CT  ON CT.[uname] = dbo.log_in.[uname]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar))
        'log_inSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.log_in.[uname], [pword], [type] FROM dbo.log_"& _ 
            "in LEFT OUTER JOIN CHANGETABLE(CHANGES dbo.log_in, @sync_last_received_anchor) C"& _ 
            "T ON CT.[uname] = dbo.log_in.[uname] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT."& _ 
            "SYS_CHANGE_CONTEXT <> @sync_client_id_binary) ELSE  BEGIN SELECT dbo.log_in.[una"& _ 
            "me], [pword], [type] FROM dbo.log_in JOIN CHANGETABLE(CHANGES dbo.log_in, @sync_"& _ 
            "last_received_anchor) CT ON CT.[uname] = dbo.log_in.[uname] WHERE (CT.SYS_CHANGE"& _ 
            "_OPERATION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= @sync_new_received_ancho"& _ 
            "r AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id"& _ 
            "_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.log_in')) > @syn"& _ 
            "c_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tr"& _ 
            "acking information for table ''%s''. To recover from this error, the client must"& _ 
            " reinitialize its local database and try again',16,3,N'dbo.log_in')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'log_inSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[uname] FROM CHANGETABLE(CHANGES dbo.lo"& _ 
            "g_in, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION = 'D' AND CT"& _ 
            ".SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS N"& _ 
            "ULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN"& _ 
            "_VALID_VERSION(object_id(N'dbo.log_in')) > @sync_last_received_anchor RAISERROR "& _ 
            "(N'SQL Server Change Tracking has cleaned up tracking information for table ''%s"& _ 
            "''. To recover from this error, the client must reinitialize its local database "& _ 
            "and try again',16,3,N'dbo.log_in')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'log_inSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.log_in.[uname], [pword], [type] FROM d"& _ 
            "bo.log_in JOIN CHANGETABLE(CHANGES dbo.log_in, @sync_last_received_anchor) CT ON"& _ 
            " CT.[uname] = dbo.log_in.[uname] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS"& _ 
            "_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL "& _ 
            "OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VAL"& _ 
            "ID_VERSION(object_id(N'dbo.log_in')) > @sync_last_received_anchor RAISERROR (N'S"& _ 
            "QL Server Change Tracking has cleaned up tracking information for table ''%s''. "& _ 
            "To recover from this error, the client must reinitialize its local database and "& _ 
            "try again',16,3,N'dbo.log_in')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "log_in"
    End Sub
End Class

Partial Public Class memberSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'memberSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand()
        Me.InsertCommand.CommandText = " SET IDENTITY_INSERT dbo.member ON ;WITH CHANGE_TRACKING_CONTEXT (@sync_client_id"& _ 
            "_binary) INSERT INTO dbo.member ([mid], [mname], [dob], [age], [interest], [city"& _ 
            "], [aid], [pid]) VALUES (@mid, @mname, @dob, @age, @interest, @city, @aid, @pid)"& _ 
            " SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_i"& _ 
            "d(N'dbo.member')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tr"& _ 
            "acking has cleaned up tracking information for table ''%s''. To recover from thi"& _ 
            "s error, the client must reinitialize its local database and try again',16,3,N'd"& _ 
            "bo.member')  SET IDENTITY_INSERT dbo.member OFF "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@mid", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@mname", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@dob", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@age", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@interest", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@city", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@aid", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@pid", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'memberSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand()
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.member FROM dbo"& _ 
            ".member JOIN CHANGETABLE(VERSION dbo.member, ([mid]), (@mid)) CT  ON CT.[mid] = "& _ 
            "dbo.member.[mid] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL O"& _ 
            "R CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT "& _ 
            "IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_c"& _ 
            "ount = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.member')"& _ 
            ") > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has clean"& _ 
            "ed up tracking information for table ''%s''. To recover from this error, the cli"& _ 
            "ent must reinitialize its local database and try again',16,3,N'dbo.member') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@mid", System.Data.SqlDbType.Int))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'memberSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand()
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.member SET [mna"& _ 
            "me] = @mname, [dob] = @dob, [age] = @age, [interest] = @interest, [city] = @city"& _ 
            ", [aid] = @aid, [pid] = @pid FROM dbo.member  JOIN CHANGETABLE(VERSION dbo.membe"& _ 
            "r, ([mid]), (@mid)) CT  ON CT.[mid] = dbo.member.[mid] WHERE (@sync_force_write "& _ 
            "= 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_rece"& _ 
            "ived_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @s"& _ 
            "ync_client_id_binary)) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_"& _ 
            "VALID_VERSION(object_id(N'dbo.member')) > @sync_last_received_anchor RAISERROR ("& _ 
            "N'SQL Server Change Tracking has cleaned up tracking information for table ''%s'"& _ 
            "'. To recover from this error, the client must reinitialize its local database a"& _ 
            "nd try again',16,3,N'dbo.member') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@mname", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@dob", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@age", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@interest", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@city", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@aid", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@pid", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@mid", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'memberSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[mid], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGETABLE(CH"& _ 
            "ANGES dbo.member, @sync_last_received_anchor) CT WHERE (CT.[mid] = @mid AND CT.S"& _ 
            "YS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@mid", System.Data.SqlDbType.Int))
        'memberSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.member.[mid], [mname], [dob], [age], [interest], [city], [aid], [pid],"& _ 
            " CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.member JOIN CHANGETABLE(V"& _ 
            "ERSION dbo.member, ([mid]), (@mid)) CT  ON CT.[mid] = dbo.member.[mid]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@mid", System.Data.SqlDbType.Int))
        'memberSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.member.[mid], [mname], [dob], [age], [interes"& _ 
            "t], [city], [aid], [pid] FROM dbo.member LEFT OUTER JOIN CHANGETABLE(CHANGES dbo"& _ 
            ".member, @sync_last_received_anchor) CT ON CT.[mid] = dbo.member.[mid] WHERE (CT"& _ 
            ".SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary) "& _ 
            "ELSE  BEGIN SELECT dbo.member.[mid], [mname], [dob], [age], [interest], [city], "& _ 
            "[aid], [pid] FROM dbo.member JOIN CHANGETABLE(CHANGES dbo.member, @sync_last_rec"& _ 
            "eived_anchor) CT ON CT.[mid] = dbo.member.[mid] WHERE (CT.SYS_CHANGE_OPERATION ="& _ 
            " 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= @sync_new_received_anchor AND (CT.SY"& _ 
            "S_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); I"& _ 
            "F CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.member')) > @sync_last_recei"& _ 
            "ved_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracking infor"& _ 
            "mation for table ''%s''. To recover from this error, the client must reinitializ"& _ 
            "e its local database and try again',16,3,N'dbo.member')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'memberSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[mid] FROM CHANGETABLE(CHANGES dbo.memb"& _ 
            "er, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION = 'D' AND CT.S"& _ 
            "YS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NUL"& _ 
            "L OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_V"& _ 
            "ALID_VERSION(object_id(N'dbo.member')) > @sync_last_received_anchor RAISERROR (N"& _ 
            "'SQL Server Change Tracking has cleaned up tracking information for table ''%s''"& _ 
            ". To recover from this error, the client must reinitialize its local database an"& _ 
            "d try again',16,3,N'dbo.member')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'memberSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.member.[mid], [mname], [dob], [age], ["& _ 
            "interest], [city], [aid], [pid] FROM dbo.member JOIN CHANGETABLE(CHANGES dbo.mem"& _ 
            "ber, @sync_last_received_anchor) CT ON CT.[mid] = dbo.member.[mid] WHERE (CT.SYS"& _ 
            "_CHANGE_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new_received_anchor A"& _ 
            "ND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_bi"& _ 
            "nary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.member')) > @sync_l"& _ 
            "ast_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up track"& _ 
            "ing information for table ''%s''. To recover from this error, the client must re"& _ 
            "initialize its local database and try again',16,3,N'dbo.member')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "member"
    End Sub
End Class

Partial Public Class photoSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'photoSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand()
        Me.InsertCommand.CommandText = " SET IDENTITY_INSERT dbo.photo ON ;WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_"& _ 
            "binary) INSERT INTO dbo.photo ([pid], [link]) VALUES (@pid, @link) SET @sync_row"& _ 
            "_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.photo'"& _ 
            ")) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has clea"& _ 
            "ned up tracking information for table ''%s''. To recover from this error, the cl"& _ 
            "ient must reinitialize its local database and try again',16,3,N'dbo.photo')  SET"& _ 
            " IDENTITY_INSERT dbo.photo OFF "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@pid", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@link", System.Data.SqlDbType.VarChar))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'photoSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand()
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.photo FROM dbo."& _ 
            "photo JOIN CHANGETABLE(VERSION dbo.photo, ([pid]), (@pid)) CT  ON CT.[pid] = dbo"& _ 
            ".photo.[pid] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT"& _ 
            ".SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS N"& _ 
            "OT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count"& _ 
            " = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.photo')) > @"& _ 
            "sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up"& _ 
            " tracking information for table ''%s''. To recover from this error, the client m"& _ 
            "ust reinitialize its local database and try again',16,3,N'dbo.photo') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@pid", System.Data.SqlDbType.Int))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'photoSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand()
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.photo SET [link"& _ 
            "] = @link FROM dbo.photo  JOIN CHANGETABLE(VERSION dbo.photo, ([pid]), (@pid)) C"& _ 
            "T  ON CT.[pid] = dbo.photo.[pid] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_V"& _ 
            "ERSION IS NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS"& _ 
            "_CHANGE_CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary))"& _ 
            " SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_i"& _ 
            "d(N'dbo.photo')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tra"& _ 
            "cking has cleaned up tracking information for table ''%s''. To recover from this"& _ 
            " error, the client must reinitialize its local database and try again',16,3,N'db"& _ 
            "o.photo') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@link", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@pid", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'photoSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[pid], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGETABLE(CH"& _ 
            "ANGES dbo.photo, @sync_last_received_anchor) CT WHERE (CT.[pid] = @pid AND CT.SY"& _ 
            "S_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@pid", System.Data.SqlDbType.Int))
        'photoSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.photo.[pid], [link], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM"& _ 
            " dbo.photo JOIN CHANGETABLE(VERSION dbo.photo, ([pid]), (@pid)) CT  ON CT.[pid] "& _ 
            "= dbo.photo.[pid]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@pid", System.Data.SqlDbType.Int))
        'photoSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.photo.[pid], [link] FROM dbo.photo LEFT OUTER"& _ 
            " JOIN CHANGETABLE(CHANGES dbo.photo, @sync_last_received_anchor) CT ON CT.[pid] "& _ 
            "= dbo.photo.[pid] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT "& _ 
            "<> @sync_client_id_binary) ELSE  BEGIN SELECT dbo.photo.[pid], [link] FROM dbo.p"& _ 
            "hoto JOIN CHANGETABLE(CHANGES dbo.photo, @sync_last_received_anchor) CT ON CT.[p"& _ 
            "id] = dbo.photo.[pid] WHERE (CT.SYS_CHANGE_OPERATION = 'I' AND CT.SYS_CHANGE_CRE"& _ 
            "ATION_VERSION  <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL O"& _ 
            "R CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALI"& _ 
            "D_VERSION(object_id(N'dbo.photo')) > @sync_last_received_anchor RAISERROR (N'SQL"& _ 
            " Server Change Tracking has cleaned up tracking information for table ''%s''. To"& _ 
            " recover from this error, the client must reinitialize its local database and tr"& _ 
            "y again',16,3,N'dbo.photo')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'photoSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[pid] FROM CHANGETABLE(CHANGES dbo.phot"& _ 
            "o, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION = 'D' AND CT.SY"& _ 
            "S_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL"& _ 
            " OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VA"& _ 
            "LID_VERSION(object_id(N'dbo.photo')) > @sync_last_received_anchor RAISERROR (N'S"& _ 
            "QL Server Change Tracking has cleaned up tracking information for table ''%s''. "& _ 
            "To recover from this error, the client must reinitialize its local database and "& _ 
            "try again',16,3,N'dbo.photo')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'photoSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.photo.[pid], [link] FROM dbo.photo JOI"& _ 
            "N CHANGETABLE(CHANGES dbo.photo, @sync_last_received_anchor) CT ON CT.[pid] = db"& _ 
            "o.photo.[pid] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION <= "& _ 
            "@sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CO"& _ 
            "NTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_i"& _ 
            "d(N'dbo.photo')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tra"& _ 
            "cking has cleaned up tracking information for table ''%s''. To recover from this"& _ 
            " error, the client must reinitialize its local database and try again',16,3,N'db"& _ 
            "o.photo')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "photo"
    End Sub
End Class

Partial Public Class sightingSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'sightingSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand()
        Me.InsertCommand.CommandText = " SET IDENTITY_INSERT dbo.sighting ON ;WITH CHANGE_TRACKING_CONTEXT (@sync_client_"& _ 
            "id_binary) INSERT INTO dbo.sighting ([sid], [sname], [place], [info], [date_time"& _ 
            "], [aid], [hid], [mid], [pid]) VALUES (@sid, @sname, @place, @info, @date_time, "& _ 
            "@aid, @hid, @mid, @pid) SET @sync_row_count = @@rowcount; IF CHANGE_TRACKING_MIN"& _ 
            "_VALID_VERSION(object_id(N'dbo.sighting')) > @sync_last_received_anchor RAISERRO"& _ 
            "R (N'SQL Server Change Tracking has cleaned up tracking information for table ''"& _ 
            "%s''. To recover from this error, the client must reinitialize its local databas"& _ 
            "e and try again',16,3,N'dbo.sighting')  SET IDENTITY_INSERT dbo.sighting OFF "
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sid", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sname", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@place", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@info", System.Data.SqlDbType.VarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@date_time", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@aid", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@hid", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@mid", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@pid", System.Data.SqlDbType.Int))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        'sightingSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand()
        Me.DeleteCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) DELETE dbo.sighting FROM d"& _ 
            "bo.sighting JOIN CHANGETABLE(VERSION dbo.sighting, ([sid]), (@sid)) CT  ON CT.[s"& _ 
            "id] = dbo.sighting.[sid] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION I"& _ 
            "S NULL OR CT.SYS_CHANGE_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_"& _ 
            "CONTEXT IS NOT NULL AND CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sy"& _ 
            "nc_row_count = @@rowcount; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo."& _ 
            "sighting')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking"& _ 
            " has cleaned up tracking information for table ''%s''. To recover from this erro"& _ 
            "r, the client must reinitialize its local database and try again',16,3,N'dbo.sig"& _ 
            "hting') "
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sid", System.Data.SqlDbType.Int))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'sightingSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand()
        Me.UpdateCommand.CommandText = ";WITH CHANGE_TRACKING_CONTEXT (@sync_client_id_binary) UPDATE dbo.sighting SET [s"& _ 
            "name] = @sname, [place] = @place, [info] = @info, [date_time] = @date_time, [aid"& _ 
            "] = @aid, [hid] = @hid, [mid] = @mid, [pid] = @pid FROM dbo.sighting  JOIN CHANG"& _ 
            "ETABLE(VERSION dbo.sighting, ([sid]), (@sid)) CT  ON CT.[sid] = dbo.sighting.[si"& _ 
            "d] WHERE (@sync_force_write = 1 OR CT.SYS_CHANGE_VERSION IS NULL OR CT.SYS_CHANG"& _ 
            "E_VERSION <= @sync_last_received_anchor OR (CT.SYS_CHANGE_CONTEXT IS NOT NULL AN"& _ 
            "D CT.SYS_CHANGE_CONTEXT = @sync_client_id_binary)) SET @sync_row_count = @@rowco"& _ 
            "unt; IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.sighting')) > @sync_la"& _ 
            "st_received_anchor RAISERROR (N'SQL Server Change Tracking has cleaned up tracki"& _ 
            "ng information for table ''%s''. To recover from this error, the client must rei"& _ 
            "nitialize its local database and try again',16,3,N'dbo.sighting') "
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sname", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@place", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@info", System.Data.SqlDbType.VarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@date_time", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@aid", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@hid", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@mid", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@pid", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sid", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'sightingSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT CT.[sid], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM CHANGETABLE(CH"& _ 
            "ANGES dbo.sighting, @sync_last_received_anchor) CT WHERE (CT.[sid] = @sid AND CT"& _ 
            ".SYS_CHANGE_OPERATION = 'D')"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sid", System.Data.SqlDbType.Int))
        'sightingSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT dbo.sighting.[sid], [sname], [place], [info], [date_time], [aid], [hid], ["& _ 
            "mid], [pid], CT.SYS_CHANGE_CONTEXT, CT.SYS_CHANGE_VERSION FROM dbo.sighting JOIN"& _ 
            " CHANGETABLE(VERSION dbo.sighting, ([sid]), (@sid)) CT  ON CT.[sid] = dbo.sighti"& _ 
            "ng.[sid]"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sid", System.Data.SqlDbType.Int))
        'sightingSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalInsertsCommand.CommandText = "IF @sync_initialized = 0 SELECT dbo.sighting.[sid], [sname], [place], [info], [da"& _ 
            "te_time], [aid], [hid], [mid], [pid] FROM dbo.sighting LEFT OUTER JOIN CHANGETAB"& _ 
            "LE(CHANGES dbo.sighting, @sync_last_received_anchor) CT ON CT.[sid] = dbo.sighti"& _ 
            "ng.[sid] WHERE (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> @sync_"& _ 
            "client_id_binary) ELSE  BEGIN SELECT dbo.sighting.[sid], [sname], [place], [info"& _ 
            "], [date_time], [aid], [hid], [mid], [pid] FROM dbo.sighting JOIN CHANGETABLE(CH"& _ 
            "ANGES dbo.sighting, @sync_last_received_anchor) CT ON CT.[sid] = dbo.sighting.[s"& _ 
            "id] WHERE (CT.SYS_CHANGE_OPERATION = 'I' AND CT.SYS_CHANGE_CREATION_VERSION  <= "& _ 
            "@sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CO"& _ 
            "NTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_i"& _ 
            "d(N'dbo.sighting')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change "& _ 
            "Tracking has cleaned up tracking information for table ''%s''. To recover from t"& _ 
            "his error, the client must reinitialize its local database and try again',16,3,N"& _ 
            "'dbo.sighting')  END "
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        'sightingSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalDeletesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT CT.[sid] FROM CHANGETABLE(CHANGES dbo.sigh"& _ 
            "ting, @sync_last_received_anchor) CT WHERE (CT.SYS_CHANGE_OPERATION = 'D' AND CT"& _ 
            ".SYS_CHANGE_VERSION <= @sync_new_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS N"& _ 
            "ULL OR CT.SYS_CHANGE_CONTEXT <> @sync_client_id_binary)); IF CHANGE_TRACKING_MIN"& _ 
            "_VALID_VERSION(object_id(N'dbo.sighting')) > @sync_last_received_anchor RAISERRO"& _ 
            "R (N'SQL Server Change Tracking has cleaned up tracking information for table ''"& _ 
            "%s''. To recover from this error, the client must reinitialize its local databas"& _ 
            "e and try again',16,3,N'dbo.sighting')  END "
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
        'sightingSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalUpdatesCommand.CommandText = "IF @sync_initialized > 0  BEGIN SELECT dbo.sighting.[sid], [sname], [place], [inf"& _ 
            "o], [date_time], [aid], [hid], [mid], [pid] FROM dbo.sighting JOIN CHANGETABLE(C"& _ 
            "HANGES dbo.sighting, @sync_last_received_anchor) CT ON CT.[sid] = dbo.sighting.["& _ 
            "sid] WHERE (CT.SYS_CHANGE_OPERATION = 'U' AND CT.SYS_CHANGE_VERSION <= @sync_new"& _ 
            "_received_anchor AND (CT.SYS_CHANGE_CONTEXT IS NULL OR CT.SYS_CHANGE_CONTEXT <> "& _ 
            "@sync_client_id_binary)); IF CHANGE_TRACKING_MIN_VALID_VERSION(object_id(N'dbo.s"& _ 
            "ighting')) > @sync_last_received_anchor RAISERROR (N'SQL Server Change Tracking "& _ 
            "has cleaned up tracking information for table ''%s''. To recover from this error"& _ 
            ", the client must reinitialize its local database and try again',16,3,N'dbo.sigh"& _ 
            "ting')  END "
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_client_id_binary", System.Data.SqlDbType.VarBinary))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "sighting"
    End Sub
End Class

Partial Public Class wildlife_managementCacheServerSyncProvider
    Inherits Microsoft.Synchronization.Data.Server.DbServerSyncProvider
    
    Private _animalSyncAdapter As animalSyncAdapter
    
    Private _habitatSyncAdapter As habitatSyncAdapter
    
    Private _lives_inSyncAdapter As lives_inSyncAdapter
    
    Private _log_inSyncAdapter As log_inSyncAdapter
    
    Private _memberSyncAdapter As memberSyncAdapter
    
    Private _photoSyncAdapter As photoSyncAdapter
    
    Private _sightingSyncAdapter As sightingSyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Dim connectionString As String = Global.WildLife_Management.My.MySettings.Default.wildlife_managementConnectionString
        Me.InitializeConnection(connectionString)
        Me.InitializeSyncAdapters
        Me.InitializeNewAnchorCommand
        Me.OnInitialized
    End Sub
    
    Public Sub New(ByVal connectionString As String)
        MyBase.New
        Me.InitializeConnection(connectionString)
        Me.InitializeSyncAdapters
        Me.InitializeNewAnchorCommand
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property animalSyncAdapter() As animalSyncAdapter
        Get
            Return Me._animalSyncAdapter
        End Get
        Set
            Me._animalSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property habitatSyncAdapter() As habitatSyncAdapter
        Get
            Return Me._habitatSyncAdapter
        End Get
        Set
            Me._habitatSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property lives_inSyncAdapter() As lives_inSyncAdapter
        Get
            Return Me._lives_inSyncAdapter
        End Get
        Set
            Me._lives_inSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property log_inSyncAdapter() As log_inSyncAdapter
        Get
            Return Me._log_inSyncAdapter
        End Get
        Set
            Me._log_inSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property memberSyncAdapter() As memberSyncAdapter
        Get
            Return Me._memberSyncAdapter
        End Get
        Set
            Me._memberSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property photoSyncAdapter() As photoSyncAdapter
        Get
            Return Me._photoSyncAdapter
        End Get
        Set
            Me._photoSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property sightingSyncAdapter() As sightingSyncAdapter
        Get
            Return Me._sightingSyncAdapter
        End Get
        Set
            Me._sightingSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeConnection(ByVal connectionString As String)
        Me.Connection = New System.Data.SqlClient.SqlConnection(connectionString)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeSyncAdapters()
        'Create SyncAdapters.
        Me._animalSyncAdapter = New animalSyncAdapter()
        Me.SyncAdapters.Add(Me._animalSyncAdapter)
        Me._habitatSyncAdapter = New habitatSyncAdapter()
        Me.SyncAdapters.Add(Me._habitatSyncAdapter)
        Me._lives_inSyncAdapter = New lives_inSyncAdapter()
        Me.SyncAdapters.Add(Me._lives_inSyncAdapter)
        Me._log_inSyncAdapter = New log_inSyncAdapter()
        Me.SyncAdapters.Add(Me._log_inSyncAdapter)
        Me._memberSyncAdapter = New memberSyncAdapter()
        Me.SyncAdapters.Add(Me._memberSyncAdapter)
        Me._photoSyncAdapter = New photoSyncAdapter()
        Me.SyncAdapters.Add(Me._photoSyncAdapter)
        Me._sightingSyncAdapter = New sightingSyncAdapter()
        Me.SyncAdapters.Add(Me._sightingSyncAdapter)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeNewAnchorCommand()
        'selectNewAnchorCmd command.
        Me.SelectNewAnchorCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectNewAnchorCommand.CommandText = "Select @sync_new_received_anchor = CHANGE_TRACKING_CURRENT_VERSION()"
        Me.SelectNewAnchorCommand.CommandType = System.Data.CommandType.Text
        Dim selectnewanchorcommand_sync_new_received_anchorParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.BigInt)
        selectnewanchorcommand_sync_new_received_anchorParameter.Direction = System.Data.ParameterDirection.Output
        Me.SelectNewAnchorCommand.Parameters.Add(selectnewanchorcommand_sync_new_received_anchorParameter)
    End Sub
End Class
